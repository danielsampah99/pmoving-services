/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    'service-areas': ServiceArea;
    blogs: Blog;
    gallery: Gallery;
    referrals: Referral;
    'mailing-list': MailingList;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'service-areas': ServiceAreasSelect<false> | ServiceAreasSelect<true>;
    blogs: BlogsSelect<false> | BlogsSelect<true>;
    gallery: GallerySelect<false> | GallerySelect<true>;
    referrals: ReferralsSelect<false> | ReferralsSelect<true>;
    'mailing-list': MailingListSelect<false> | MailingListSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "service-areas".
 */
export interface ServiceArea {
  id: number;
  /**
   * Just the name of the service area or city.
   */
  title: string;
  /**
   * This is a unique string for identifying a moving service area. For example, given a city with title, "Shakopee", a unique slug could be"shakopee". this is slug will also be used in the urls for service area pages. "/service-areas/[slug]", "/service-areas/shakopee"
   */
  slug: string;
  /**
   * This field should contain the map url to this city. It enables the redirection of the user to the place on the map
   */
  mapUrl?: string | null;
  /**
   * The location of this service area on the map
   */
  mapImage?: (number | null) | Media;
  description: string;
  'short-code': string;
  latitude: number;
  longitude: number;
  /**
   * What state does this service area or city belong to?
   */
  'state-name': string;
  /**
   * The two-letter word initials of the state this service area or city belongs to. Example if city is Minnesota, state initials should be MN
   */
  'state-initials': string;
  faqs?:
    | {
        /**
         * Sample question about this service area concerning moving. Example: "How can I avoid hidden fees"
         */
        question: string;
        /**
         * Answer or response to the question. Example: "Get free written estimate and ask about additional charges for stairs, long carries, or bulky items."
         */
        answer: string;
        id?: string | null;
      }[]
    | null;
  resources?:
    | {
        /**
         * Name of the resource
         */
        title?: string | null;
        /**
         * a link or url pointing to the name of the resource
         */
        link?: string | null;
        id?: string | null;
      }[]
    | null;
  movingServices?:
    | {
        /**
         * Title of the moving service. Example: "Albert Lea Residential Movers"
         */
        title: string;
        /**
         * Rich text about the moving service. Can include links to external websites
         */
        content: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        /**
         * Moving Service Image
         */
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs".
 */
export interface Blog {
  id: number;
  /**
   * The title of the blog post. This is shown on the all blogs page and the page rendering/displaying the blog post.
   */
  title: string;
  /**
   * The slug is th unique text used to identify each blog post. It most likely should be the same as the title with but in lower case and the spaces replaced with dashes
   */
  slug: string;
  /**
   * The actual content of the blog. Images, links, and lists can be included
   */
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * These tags will used for Search Engine Optimization and categorization of the blogs when being crawled and indexed by google or other web services
   */
  tags?: string[] | null;
  /**
   * The date this blog will be posted/published. The date is also available to readers of blogs
   */
  publishedDate: string;
  thumbnail: number | Media;
  readingTime?: number | null;
  /**
   * A short description for previews. Will default to blog's description if no value is provided for this field.
   */
  thumbnailDescription?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery".
 */
export interface Gallery {
  id: number;
  categories: (
    | 'moving-crew'
    | 'moving-projects'
    | 'residential'
    | 'commercial'
    | 'long-distance'
    | 'local'
    | 'storage'
    | 'international'
  )[];
  /**
   * The image that will be displayed in the mansory photo grid
   */
  Photo: number | Media;
  /**
   * The given title will be displayed on the gallery page as a field to categorize images in addition to the categories field
   */
  title: string;
  /**
   * Optional: A brief description of the image. This can be used for alt text or captions.
   */
  imageDescription?: string | null;
  /**
   * Select to highlight this image as a company favorite in the gallery. 'Our Pick' images may be given special prominence to showcase exceptional work, key services, or customer successes.
   */
  ourPick?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "referrals".
 */
export interface Referral {
  id: number;
  /**
   * The full name of the  referrer, i.e. the person filling out the form or recommeding us to a prospective client
   */
  referrerName?: string | null;
  /**
   * The email address of the referrer
   */
  referrerEmail: string;
  /**
   * phone number of the referrer
   */
  referrerPhoneNumber: string;
  newBusinessPartner?: string | null;
  /**
   * Name of the company or party being referred / potential client
   */
  prospectName: string;
  /**
   * The name of a person of the referred party who can be contacted
   */
  prospectContact: string;
  /**
   * Phone Number of the company or party being referred / potential client
   */
  prospectPhoneNumber: string;
  /**
   * Name of the company or party being referred / potential client
   */
  prospectEmail: string;
  /**
   * Can the referred / potential client be contacted via a phone call?
   */
  contactPhone: boolean;
  /**
   * Can the referred / potential client be contacted via email?
   */
  contactEmail: boolean;
  /**
   * Send the referrer / recommender feedback, letting them know their referred party has been contacted
   */
  contactReferrer: boolean;
  comment?: string | null;
  serviceHome: boolean;
  serviceAssemblyDelivery: boolean;
  serviceBusiness: boolean;
  serviceOther: boolean;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mailing-list".
 */
export interface MailingList {
  id: number;
  /**
   * Email address of the subscriber
   */
  emailAddress: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'service-areas';
        value: number | ServiceArea;
      } | null)
    | ({
        relationTo: 'blogs';
        value: number | Blog;
      } | null)
    | ({
        relationTo: 'gallery';
        value: number | Gallery;
      } | null)
    | ({
        relationTo: 'referrals';
        value: number | Referral;
      } | null)
    | ({
        relationTo: 'mailing-list';
        value: number | MailingList;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "service-areas_select".
 */
export interface ServiceAreasSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  mapUrl?: T;
  mapImage?: T;
  description?: T;
  'short-code'?: T;
  latitude?: T;
  longitude?: T;
  'state-name'?: T;
  'state-initials'?: T;
  faqs?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  resources?:
    | T
    | {
        title?: T;
        link?: T;
        id?: T;
      };
  movingServices?:
    | T
    | {
        title?: T;
        content?: T;
        image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs_select".
 */
export interface BlogsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  content?: T;
  tags?: T;
  publishedDate?: T;
  thumbnail?: T;
  readingTime?: T;
  thumbnailDescription?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gallery_select".
 */
export interface GallerySelect<T extends boolean = true> {
  categories?: T;
  Photo?: T;
  title?: T;
  imageDescription?: T;
  ourPick?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "referrals_select".
 */
export interface ReferralsSelect<T extends boolean = true> {
  referrerName?: T;
  referrerEmail?: T;
  referrerPhoneNumber?: T;
  newBusinessPartner?: T;
  prospectName?: T;
  prospectContact?: T;
  prospectPhoneNumber?: T;
  prospectEmail?: T;
  contactPhone?: T;
  contactEmail?: T;
  contactReferrer?: T;
  comment?: T;
  serviceHome?: T;
  serviceAssemblyDelivery?: T;
  serviceBusiness?: T;
  serviceOther?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mailing-list_select".
 */
export interface MailingListSelect<T extends boolean = true> {
  emailAddress?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}